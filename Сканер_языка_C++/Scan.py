# Данный модуль содержит лексический анализатор

from enum import Enum

class Lex(Enum):
        ALIGNAS, ALIGNOF, AND, AND_EQ, ASM, AUTO, BITAND, BITOR, BOOL, BREAK, \
        CASE, CATCH, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, COMPL, CONCEPT, \
        CONST, CONST_CAST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONTINUE, CO_AWAIT, \
        CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DO, DOUBLE, DYNAMIC_CAST, \
        ELSE, ENUM, EXPLICIT, EXPORT, EXTERN, FALSE, FLOAT, FOR, FRIEND, GOTO, IF, INLINE, \
        INT, LONG, MUTABLE, NAMESPACE, NEW, NOEXCEPT, NOT, NOT_EQ, NULLPTR, OPERATOR, OR, \
        OR_EQ, PRIVATE, PROTECTED, PUBLIC, REGISTER, REINTERPRET_CAST, REQUIRES, RETURN, \
        SHORT, SIGNED, SIZEOF, STATIC, STATIC_ASSERT, STATIC_CAST, STRUCT, SWITCH, TEMPLATE, \
        THIS, THREAD_LOCAL, THROW, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, \
        USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_EQ = range(92)

lex_names = []
for enum_lex in Lex:
        lex_names.append(enum_lex.name)
lex_dict = dict(zip(lex_names, [0] * len(Lex)))
name = ''
